В современном мире очень актуальна проблема работы с изображениями, их распознавание и обработка. В нашей жизни часто случаются такие ситуации: человек сделал отличную фотографию в красивой позе, с идеальным освещением и прекрасным уникальным пейзажем на заднем плане... но, например, слегка обрезал сверху причёску. Из-за такой мелочи эта фотография больше не может считаться идеальной. Что же делать?
Проект "Image Prediction" позволит пользователю решить эту проблему. Программа может достраивать ("предсказывать") недостающую часть изображения так, что кажется, будто она изначально была на фото.
Проект реализован при помощи машинного обучения на основе алгоритма линейной регрессии. Опишем его принцип работы. Допустим у нас есть объект, имеющий несколько признаков. Например, рассмотрим как объект кота, а как признаки - длину его хвоста и вес. Нарисуем график, на осях которого будут расположены признаки. На этом графике кот будет изображаться точкой, которой соответствует его длина хвоста по оси X и его вес оси Y. Возьмём нескольких различных котов. Логично предположить, что чем больше кот, тем больше и его вес, и длина его хвоста. Поэтому, отметив всех котов на графике, мы увидим, что точки расположены примерно на одной возрастающей прямой, но, разумеется, с некоторым разбросом. Линейная регрессия находит такую прямую, которой эти точки на графике лучше всего удовлетворяют - то есть прямую, на которой примерно расположено большинство объектов. Теперь мы, зная, например, вес некого кота можем предположить, какая у него скорее всего длина хвоста. Мы берём точку на прямой, координата Y (вес) которой нам известна и находим её координату по оси Х (длину хвоста). Таким же образом линейная регрессия может работать с гораздо большим, чем два, количеством признаков, работая с графиками с большим количеством осей.
Итак, в моём проекте линейная регрессия обучается (подбирает прямую), таким образом, чтобы, грубо говоря, по одной оси были цвета серединки картинки, а по другой - цвета внешней части, бортиков. После обучения ей подаётся только центральная часть картинки (1 ось), а она по ней предсказывает бортики (2 ось).
В качестве данных я использую базу данных из изображений хорьков, однако из-за того, что пресутствует множество абсолютно различных ситуаций, где они могут быть сфотографированы, алгоритм способен предсказывать результат и для других видов изображений.
